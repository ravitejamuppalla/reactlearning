{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nlet intialValuesItems = {\n  cartItemList: [],\n  toggleCart: false\n};\nlet cartSlice = createSlice({\n  name: \"cart\",\n  initialState: intialValuesItems,\n  reducers: {\n    addItem(state, action) {\n      if (state.cartItemList.length == 0) {\n        console.log(state.cartItemList);\n        state.cartItemList.push(action.payload);\n      } else {\n        let allListWithOutCurrentObject = state.cartItemList.filter(values => !(values.id === action.payload.id));\n        state.cartItemList.push(allListWithOutCurrentObject);\n        let currentObject = state.cartItemList.filter(values => values.id === action.payload.id);\n        state.cartItemList.map(values => {\n          if (values.id === action.payload.id) {\n            console.log(values);\n            let newObject = {\n              ...values,\n              count: values.count + 1\n            };\n            let newlist = state.cartItemList.filter(values => !(values.id === action.payload.id));\n            state.cartItemList.push(newlist);\n            state.cartItemList.push(newObject);\n          } else {\n            state.cartItemList.push(action.payload);\n          }\n        });\n      }\n      console.log(state.cartItemList);\n    },\n    removeItems(state) {},\n    toggleCart(state) {\n      console.log(state.toggleCart);\n      state.toggleCart = true;\n    }\n  }\n});\nlet storeCart = configureStore({\n  reducer: {\n    cartItem: cartSlice.reducer\n  }\n});\nexport let cartActions = cartSlice.actions;\nexport default storeCart;","map":{"version":3,"names":["createSlice","configureStore","intialValuesItems","cartItemList","toggleCart","cartSlice","name","initialState","reducers","addItem","state","action","length","console","log","push","payload","allListWithOutCurrentObject","filter","values","id","currentObject","map","newObject","count","newlist","removeItems","storeCart","reducer","cartItem","cartActions","actions"],"sources":["C:/Users/Ravi_Teja_Muppala/Documents/GitUdemyReactJs/reactlearning/advanceRedux/src/store/index.js"],"sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n\r\nlet intialValuesItems = {\r\n  cartItemList: [],\r\n  toggleCart: false,\r\n};\r\nlet cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: intialValuesItems,\r\n  reducers: {\r\n    addItem(state, action) {\r\n      if (state.cartItemList.length == 0) {\r\n        console.log(state.cartItemList);\r\n        state.cartItemList.push(action.payload);\r\n      } else {\r\n        let allListWithOutCurrentObject = state.cartItemList.filter(\r\n          (values) => !(values.id === action.payload.id)\r\n        );\r\n        state.cartItemList.push(allListWithOutCurrentObject);\r\n        let currentObject = state.cartItemList.filter(\r\n          (values) => values.id === action.payload.id\r\n        );\r\n\r\n        state.cartItemList.map((values) => {\r\n          if (values.id === action.payload.id) {\r\n            console.log(values);\r\n            let newObject = {\r\n              ...values,\r\n              count: values.count + 1,\r\n            };\r\n            let newlist = state.cartItemList.filter(\r\n              (values) => !(values.id === action.payload.id)\r\n            );\r\n            state.cartItemList.push(newlist);\r\n            state.cartItemList.push(newObject);\r\n          } else {\r\n            state.cartItemList.push(action.payload);\r\n          }\r\n        });\r\n      }\r\n\r\n      console.log(state.cartItemList);\r\n    },\r\n    removeItems(state) {},\r\n    toggleCart(state) {\r\n      console.log(state.toggleCart);\r\n      state.toggleCart = true;\r\n    },\r\n  },\r\n});\r\n\r\nlet storeCart = configureStore({ reducer: { cartItem: cartSlice.reducer } });\r\n\r\nexport let cartActions = cartSlice.actions;\r\nexport default storeCart;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,IAAIC,iBAAiB,GAAG;EACtBC,YAAY,EAAE,EAAE;EAChBC,UAAU,EAAE;AACd,CAAC;AACD,IAAIC,SAAS,GAAGL,WAAW,CAAC;EAC1BM,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEL,iBAAiB;EAC/BM,QAAQ,EAAE;IACRC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACrB,IAAID,KAAK,CAACP,YAAY,CAACS,MAAM,IAAI,CAAC,EAAE;QAClCC,OAAO,CAACC,GAAG,CAACJ,KAAK,CAACP,YAAY,CAAC;QAC/BO,KAAK,CAACP,YAAY,CAACY,IAAI,CAACJ,MAAM,CAACK,OAAO,CAAC;MACzC,CAAC,MAAM;QACL,IAAIC,2BAA2B,GAAGP,KAAK,CAACP,YAAY,CAACe,MAAM,CACxDC,MAAM,IAAK,EAAEA,MAAM,CAACC,EAAE,KAAKT,MAAM,CAACK,OAAO,CAACI,EAAE,CAC/C,CAAC;QACDV,KAAK,CAACP,YAAY,CAACY,IAAI,CAACE,2BAA2B,CAAC;QACpD,IAAII,aAAa,GAAGX,KAAK,CAACP,YAAY,CAACe,MAAM,CAC1CC,MAAM,IAAKA,MAAM,CAACC,EAAE,KAAKT,MAAM,CAACK,OAAO,CAACI,EAC3C,CAAC;QAEDV,KAAK,CAACP,YAAY,CAACmB,GAAG,CAAEH,MAAM,IAAK;UACjC,IAAIA,MAAM,CAACC,EAAE,KAAKT,MAAM,CAACK,OAAO,CAACI,EAAE,EAAE;YACnCP,OAAO,CAACC,GAAG,CAACK,MAAM,CAAC;YACnB,IAAII,SAAS,GAAG;cACd,GAAGJ,MAAM;cACTK,KAAK,EAAEL,MAAM,CAACK,KAAK,GAAG;YACxB,CAAC;YACD,IAAIC,OAAO,GAAGf,KAAK,CAACP,YAAY,CAACe,MAAM,CACpCC,MAAM,IAAK,EAAEA,MAAM,CAACC,EAAE,KAAKT,MAAM,CAACK,OAAO,CAACI,EAAE,CAC/C,CAAC;YACDV,KAAK,CAACP,YAAY,CAACY,IAAI,CAACU,OAAO,CAAC;YAChCf,KAAK,CAACP,YAAY,CAACY,IAAI,CAACQ,SAAS,CAAC;UACpC,CAAC,MAAM;YACLb,KAAK,CAACP,YAAY,CAACY,IAAI,CAACJ,MAAM,CAACK,OAAO,CAAC;UACzC;QACF,CAAC,CAAC;MACJ;MAEAH,OAAO,CAACC,GAAG,CAACJ,KAAK,CAACP,YAAY,CAAC;IACjC,CAAC;IACDuB,WAAWA,CAAChB,KAAK,EAAE,CAAC,CAAC;IACrBN,UAAUA,CAACM,KAAK,EAAE;MAChBG,OAAO,CAACC,GAAG,CAACJ,KAAK,CAACN,UAAU,CAAC;MAC7BM,KAAK,CAACN,UAAU,GAAG,IAAI;IACzB;EACF;AACF,CAAC,CAAC;AAEF,IAAIuB,SAAS,GAAG1B,cAAc,CAAC;EAAE2B,OAAO,EAAE;IAAEC,QAAQ,EAAExB,SAAS,CAACuB;EAAQ;AAAE,CAAC,CAAC;AAE5E,OAAO,IAAIE,WAAW,GAAGzB,SAAS,CAAC0B,OAAO;AAC1C,eAAeJ,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}