{"ast":null,"code":"import { createSlice, configureStore, current } from \"@reduxjs/toolkit\";\nlet intialValuesItems = {\n  items: [],\n  toggleCart: false\n};\nlet cartSlice = createSlice({\n  name: \"cart\",\n  initialState: intialValuesItems,\n  reducers: {\n    addItem(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          count: 1,\n          name: newItem.title\n        });\n      } else {\n        existingItem.count++;\n      }\n      console.log(current(state.items));\n    },\n    removeItems(state) {},\n    toggleCart(state) {\n      state.toggleCart = true;\n    }\n  }\n});\nlet storeCart = configureStore({\n  reducer: {\n    cartItem: cartSlice.reducer\n  }\n});\nexport let cartActions = cartSlice.actions;\nexport default storeCart;","map":{"version":3,"names":["createSlice","configureStore","current","intialValuesItems","items","toggleCart","cartSlice","name","initialState","reducers","addItem","state","action","newItem","payload","existingItem","find","item","id","push","price","count","title","console","log","removeItems","storeCart","reducer","cartItem","cartActions","actions"],"sources":["C:/Users/Ravi_Teja_Muppala/Documents/GitUdemyReactJs/reactlearning/advanceRedux/src/store/index.js"],"sourcesContent":["import { createSlice, configureStore, current } from \"@reduxjs/toolkit\";\r\n\r\nlet intialValuesItems = {\r\n  items: [],\r\n  toggleCart: false,\r\n};\r\nlet cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: intialValuesItems,\r\n  reducers: {\r\n    addItem(state, action) {\r\n      const newItem = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          id: newItem.id,\r\n          price: newItem.price,\r\n          count: 1,\r\n          name: newItem.title,\r\n        });\r\n      } else {\r\n        existingItem.count++;\r\n      }\r\n      console.log(current(state.items));\r\n    },\r\n    removeItems(state) {},\r\n    toggleCart(state) {\r\n      state.toggleCart = true;\r\n    },\r\n  },\r\n});\r\n\r\nlet storeCart = configureStore({ reducer: { cartItem: cartSlice.reducer } });\r\n\r\nexport let cartActions = cartSlice.actions;\r\nexport default storeCart;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,EAAEC,OAAO,QAAQ,kBAAkB;AAEvE,IAAIC,iBAAiB,GAAG;EACtBC,KAAK,EAAE,EAAE;EACTC,UAAU,EAAE;AACd,CAAC;AACD,IAAIC,SAAS,GAAGN,WAAW,CAAC;EAC1BO,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEL,iBAAiB;EAC/BM,QAAQ,EAAE;IACRC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACrB,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACP,KAAK,CAACY,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACvE,IAAI,CAACH,YAAY,EAAE;QACjBJ,KAAK,CAACP,KAAK,CAACe,IAAI,CAAC;UACfD,EAAE,EAAEL,OAAO,CAACK,EAAE;UACdE,KAAK,EAAEP,OAAO,CAACO,KAAK;UACpBC,KAAK,EAAE,CAAC;UACRd,IAAI,EAAEM,OAAO,CAACS;QAChB,CAAC,CAAC;MACJ,CAAC,MAAM;QACLP,YAAY,CAACM,KAAK,EAAE;MACtB;MACAE,OAAO,CAACC,GAAG,CAACtB,OAAO,CAACS,KAAK,CAACP,KAAK,CAAC,CAAC;IACnC,CAAC;IACDqB,WAAWA,CAACd,KAAK,EAAE,CAAC,CAAC;IACrBN,UAAUA,CAACM,KAAK,EAAE;MAChBA,KAAK,CAACN,UAAU,GAAG,IAAI;IACzB;EACF;AACF,CAAC,CAAC;AAEF,IAAIqB,SAAS,GAAGzB,cAAc,CAAC;EAAE0B,OAAO,EAAE;IAAEC,QAAQ,EAAEtB,SAAS,CAACqB;EAAQ;AAAE,CAAC,CAAC;AAE5E,OAAO,IAAIE,WAAW,GAAGvB,SAAS,CAACwB,OAAO;AAC1C,eAAeJ,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}