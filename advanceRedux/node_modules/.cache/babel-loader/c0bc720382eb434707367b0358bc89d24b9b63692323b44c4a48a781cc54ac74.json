{"ast":null,"code":"import { createSlice, configureStore, current } from \"@reduxjs/toolkit\";\nlet intialValuesItems = {\n  items: [],\n  toggleCart: false,\n  notification: null\n};\nlet cartSlice = createSlice({\n  name: \"cart\",\n  initialState: intialValuesItems,\n  reducers: {\n    addItem(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          count: 1,\n          name: newItem.title\n        });\n      } else {\n        existingItem.count++;\n      }\n    },\n    removeItems(state, action) {\n      let removeelement = action.payload;\n      const existingItem = state.items.find(item => item.id === removeelement.id);\n      if (existingItem) {\n        if (!(existingItem.count === 1)) existingItem.count--;else state.items = state.items.filter(values => !(values.id == removeelement.id));\n      }\n    },\n    toggleCart(state) {\n      state.toggleCart = true;\n    },\n    notificationFucntion(state, action) {\n      state.notification = {\n        status: action.payload.status,\n        title: action.payload.title,\n        message: action.payload.message\n      };\n    }\n  }\n});\nlet storeCart = configureStore({\n  reducer: {\n    cartItem: cartSlice.reducer\n  }\n});\nexport let cartActions = cartSlice.actions;\nexport default storeCart;\nfunction sendCartData(cart) {\n  return dispatch => {\n    dispatch(cartActions.notificationFucntion({\n      status: \"Pending\",\n      title: \"Pending..\",\n      message: \"Sending the Data Request\"\n    }));\n    async function sendRequestData() {\n      let response = await fetch(\"https://learningreact-f5a3c-default-rtdb.firebaseio.com/cartItems.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cartItems)\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to Load the request\");\n      }\n      dispatch(cartActions.notificationFucntion({\n        status: \"success\",\n        title: \"Sucess\",\n        message: \"Cart Items Details Sucessfully\"\n      }));\n    }\n    try {\n      sendRequestData();\n    } catch (error) {\n      dispatch(cartActions.notificationFucntion({\n        status: \"error\",\n        title: \"Failed\",\n        message: \"Failed to add the deatils \"\n      }));\n    }\n  };\n}","map":{"version":3,"names":["createSlice","configureStore","current","intialValuesItems","items","toggleCart","notification","cartSlice","name","initialState","reducers","addItem","state","action","newItem","payload","existingItem","find","item","id","push","price","count","title","removeItems","removeelement","filter","values","notificationFucntion","status","message","storeCart","reducer","cartItem","cartActions","actions","sendCartData","cart","dispatch","sendRequestData","response","fetch","method","body","JSON","stringify","cartItems","ok","Error","error"],"sources":["C:/Users/Ravi_Teja_Muppala/Documents/GitUdemyReactJs/reactlearning/advanceRedux/src/store/index.js"],"sourcesContent":["import { createSlice, configureStore, current } from \"@reduxjs/toolkit\";\r\n\r\nlet intialValuesItems = {\r\n  items: [],\r\n  toggleCart: false,\r\n  notification: null,\r\n};\r\nlet cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: intialValuesItems,\r\n  reducers: {\r\n    addItem(state, action) {\r\n      const newItem = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          id: newItem.id,\r\n          price: newItem.price,\r\n          count: 1,\r\n          name: newItem.title,\r\n        });\r\n      } else {\r\n        existingItem.count++;\r\n      }\r\n    },\r\n    removeItems(state, action) {\r\n      let removeelement = action.payload;\r\n      const existingItem = state.items.find(\r\n        (item) => item.id === removeelement.id\r\n      );\r\n\r\n      if (existingItem) {\r\n        if (!(existingItem.count === 1)) existingItem.count--;\r\n        else\r\n          state.items = state.items.filter(\r\n            (values) => !(values.id == removeelement.id)\r\n          );\r\n      }\r\n    },\r\n    toggleCart(state) {\r\n      state.toggleCart = true;\r\n    },\r\n\r\n    notificationFucntion(state, action) {\r\n      state.notification = {\r\n        status: action.payload.status,\r\n        title: action.payload.title,\r\n        message: action.payload.message,\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nlet storeCart = configureStore({ reducer: { cartItem: cartSlice.reducer } });\r\n\r\nexport let cartActions = cartSlice.actions;\r\nexport default storeCart;\r\n\r\nfunction sendCartData(cart) {\r\n  return (dispatch) => {\r\n    dispatch(\r\n      cartActions.notificationFucntion({\r\n        status: \"Pending\",\r\n        title: \"Pending..\",\r\n        message: \"Sending the Data Request\",\r\n      })\r\n    );\r\n\r\n    async function sendRequestData() {\r\n      let response = await fetch(\r\n        \"https://learningreact-f5a3c-default-rtdb.firebaseio.com/cartItems.json\",\r\n        {\r\n          method: \"PUT\",\r\n          body: JSON.stringify(cartItems),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to Load the request\");\r\n      }\r\n\r\n      dispatch(\r\n        cartActions.notificationFucntion({\r\n          status: \"success\",\r\n          title: \"Sucess\",\r\n          message: \"Cart Items Details Sucessfully\",\r\n        })\r\n      );\r\n    }\r\n\r\n    try {\r\n      sendRequestData();\r\n    } catch (error) {\r\n      dispatch(\r\n        cartActions.notificationFucntion({\r\n          status: \"error\",\r\n          title: \"Failed\",\r\n          message: \"Failed to add the deatils \",\r\n        })\r\n      );\r\n    }\r\n  };\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}