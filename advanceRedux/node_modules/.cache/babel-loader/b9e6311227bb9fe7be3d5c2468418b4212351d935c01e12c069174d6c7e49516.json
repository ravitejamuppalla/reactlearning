{"ast":null,"code":"import { createSlice, configureStore, current } from \"@reduxjs/toolkit\";\nlet intialValuesItems = {\n  cartItemList: [],\n  toggleCart: false\n};\nlet cartSlice = createSlice({\n  name: \"cart\",\n  initialState: intialValuesItems,\n  reducers: {\n    addItem(state, action) {\n      if (state.cartItemList.length == 0) {\n        console.log(state.cartItemList);\n        state.cartItemList.push(action.payload);\n      } else {\n        // let allListWithOutCurrentObject = state.cartItemList.filter(\n        //   (values) => !(values.id === action.payload.id)\n        // );\n        // if (!(allListWithOutCurrentObject.length === 0))\n        //   state.cartItemList.push(allListWithOutCurrentObject);\n        state.cartItemList.forEach(element => {\n          console.log(\"Intial Review Details\");\n          console.log(current(element));\n        });\n        let currentObject = current(state.cartItemList).find(values => values.id == action.payload.id);\n        // let currentObject = state.cartItemList.find(\n        //   (values) => values.id == action.payload.id\n        // );\n        console.log(\"THe intial Count \" + currentObject);\n        let newObject = {\n          ...currentObject\n        };\n        newObject.count++;\n        console.log(\"THe final Count \" + newObject);\n        state.cartItemList.push(newObject);\n        state.cartItemList.forEach(element => {\n          console.log(\"Final Review Details\");\n          console.log(element);\n        });\n      }\n    },\n    removeItems(state) {},\n    toggleCart(state) {\n      console.log(state.toggleCart);\n      state.toggleCart = true;\n    }\n  }\n});\nlet storeCart = configureStore({\n  reducer: {\n    cartItem: cartSlice.reducer\n  }\n});\nexport let cartActions = cartSlice.actions;\nexport default storeCart;","map":{"version":3,"names":["createSlice","configureStore","current","intialValuesItems","cartItemList","toggleCart","cartSlice","name","initialState","reducers","addItem","state","action","length","console","log","push","payload","forEach","element","currentObject","find","values","id","newObject","count","removeItems","storeCart","reducer","cartItem","cartActions","actions"],"sources":["C:/Users/Ravi_Teja_Muppala/Documents/GitUdemyReactJs/reactlearning/advanceRedux/src/store/index.js"],"sourcesContent":["import { createSlice, configureStore, current } from \"@reduxjs/toolkit\";\r\n\r\nlet intialValuesItems = {\r\n  cartItemList: [],\r\n  toggleCart: false,\r\n};\r\nlet cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: intialValuesItems,\r\n  reducers: {\r\n    addItem(state, action) {\r\n      if (state.cartItemList.length == 0) {\r\n        console.log(state.cartItemList);\r\n        state.cartItemList.push(action.payload);\r\n      } else {\r\n        // let allListWithOutCurrentObject = state.cartItemList.filter(\r\n        //   (values) => !(values.id === action.payload.id)\r\n        // );\r\n        // if (!(allListWithOutCurrentObject.length === 0))\r\n        //   state.cartItemList.push(allListWithOutCurrentObject);\r\n        state.cartItemList.forEach((element) => {\r\n          console.log(\"Intial Review Details\");\r\n          console.log(current(element));\r\n        });\r\n\r\n        let currentObject = current(state.cartItemList).find(\r\n          (values) => values.id == action.payload.id\r\n        );\r\n        // let currentObject = state.cartItemList.find(\r\n        //   (values) => values.id == action.payload.id\r\n        // );\r\n        console.log(\"THe intial Count \" + currentObject);\r\n        let newObject = {\r\n          ...currentObject,\r\n        };\r\n        newObject.count++;\r\n\r\n        console.log(\"THe final Count \" + newObject);\r\n\r\n        state.cartItemList.push(newObject);\r\n\r\n        state.cartItemList.forEach((element) => {\r\n          console.log(\"Final Review Details\");\r\n          console.log(element);\r\n        });\r\n      }\r\n    },\r\n    removeItems(state) {},\r\n    toggleCart(state) {\r\n      console.log(state.toggleCart);\r\n      state.toggleCart = true;\r\n    },\r\n  },\r\n});\r\n\r\nlet storeCart = configureStore({ reducer: { cartItem: cartSlice.reducer } });\r\n\r\nexport let cartActions = cartSlice.actions;\r\nexport default storeCart;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,EAAEC,OAAO,QAAQ,kBAAkB;AAEvE,IAAIC,iBAAiB,GAAG;EACtBC,YAAY,EAAE,EAAE;EAChBC,UAAU,EAAE;AACd,CAAC;AACD,IAAIC,SAAS,GAAGN,WAAW,CAAC;EAC1BO,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEL,iBAAiB;EAC/BM,QAAQ,EAAE;IACRC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACrB,IAAID,KAAK,CAACP,YAAY,CAACS,MAAM,IAAI,CAAC,EAAE;QAClCC,OAAO,CAACC,GAAG,CAACJ,KAAK,CAACP,YAAY,CAAC;QAC/BO,KAAK,CAACP,YAAY,CAACY,IAAI,CAACJ,MAAM,CAACK,OAAO,CAAC;MACzC,CAAC,MAAM;QACL;QACA;QACA;QACA;QACA;QACAN,KAAK,CAACP,YAAY,CAACc,OAAO,CAAEC,OAAO,IAAK;UACtCL,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;UACpCD,OAAO,CAACC,GAAG,CAACb,OAAO,CAACiB,OAAO,CAAC,CAAC;QAC/B,CAAC,CAAC;QAEF,IAAIC,aAAa,GAAGlB,OAAO,CAACS,KAAK,CAACP,YAAY,CAAC,CAACiB,IAAI,CACjDC,MAAM,IAAKA,MAAM,CAACC,EAAE,IAAIX,MAAM,CAACK,OAAO,CAACM,EAC1C,CAAC;QACD;QACA;QACA;QACAT,OAAO,CAACC,GAAG,CAAC,mBAAmB,GAAGK,aAAa,CAAC;QAChD,IAAII,SAAS,GAAG;UACd,GAAGJ;QACL,CAAC;QACDI,SAAS,CAACC,KAAK,EAAE;QAEjBX,OAAO,CAACC,GAAG,CAAC,kBAAkB,GAAGS,SAAS,CAAC;QAE3Cb,KAAK,CAACP,YAAY,CAACY,IAAI,CAACQ,SAAS,CAAC;QAElCb,KAAK,CAACP,YAAY,CAACc,OAAO,CAAEC,OAAO,IAAK;UACtCL,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;UACnCD,OAAO,CAACC,GAAG,CAACI,OAAO,CAAC;QACtB,CAAC,CAAC;MACJ;IACF,CAAC;IACDO,WAAWA,CAACf,KAAK,EAAE,CAAC,CAAC;IACrBN,UAAUA,CAACM,KAAK,EAAE;MAChBG,OAAO,CAACC,GAAG,CAACJ,KAAK,CAACN,UAAU,CAAC;MAC7BM,KAAK,CAACN,UAAU,GAAG,IAAI;IACzB;EACF;AACF,CAAC,CAAC;AAEF,IAAIsB,SAAS,GAAG1B,cAAc,CAAC;EAAE2B,OAAO,EAAE;IAAEC,QAAQ,EAAEvB,SAAS,CAACsB;EAAQ;AAAE,CAAC,CAAC;AAE5E,OAAO,IAAIE,WAAW,GAAGxB,SAAS,CAACyB,OAAO;AAC1C,eAAeJ,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}