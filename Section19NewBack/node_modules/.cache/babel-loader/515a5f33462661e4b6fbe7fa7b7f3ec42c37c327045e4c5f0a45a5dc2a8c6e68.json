{"ast":null,"code":"// const redux = require(\"redux\");\nimport { createStore } from \"redux\";\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\nlet intialStateValues = {\n  counter: 0,\n  showcounter: true\n};\nlet counterSlice = createSlice({\n  name: \"counter\",\n  initialState: intialStateValues,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increaseCounter(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showcounter = !state.showcounter;\n    }\n  }\n});\n\n// let reducerFunciton = (state = intialState, action) => {\n//   console.log(state);\n//   if (action.type === \"Increment\") {\n//     return {\n//       counter: state.counter + 1,\n//       showcounter: state.showcounter,\n//     };\n//   }\n//   if (action.type === \"IncrementByamount\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       showcounter: state.showcounter,\n//     };\n//   }\n//   if (action.type === \"Decrement\") {\n//     return {\n//       counter: state.counter - 1,\n//       showcounter: state.showcounter,\n//     };\n//   }\n//   if (action.type === \"toggleCounter\") {\n//     return {\n//       counter: state.counter,\n//       showcounter: !state.showcounter,\n//     };\n//   }\n\n//   return state;\n// };\n\n// let reduxStore = createStore(reducerFunciton);\nlet reduxStore = configureStore({\n  reducer: {\n    counter: counterSlice.reducer\n  }\n});\nexport const counterAction = counterSlice.actions;\nexport default reduxStore;\n// let storeSubscription = () => {\n//   let storeObject = store.getState();\n//   console.log(storeObject);\n// };\n\n// store.subscribe(storeSubscription);\n\n// store.dispatch({ type: \"Increment\" });","map":{"version":3,"names":["createStore","createSlice","configureStore","intialStateValues","counter","showcounter","counterSlice","name","initialState","reducers","increment","state","decrement","increaseCounter","action","payload","toggleCounter","reduxStore","reducer","counterAction","actions"],"sources":["C:/Users/Ravi_Teja_Muppala/Documents/GitUdemyReactJs/reactlearning/Section19NewBack/src/store/redux-store.js"],"sourcesContent":["// const redux = require(\"redux\");\r\nimport { createStore } from \"redux\";\r\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n\r\nlet intialStateValues = {\r\n  counter: 0,\r\n  showcounter: true,\r\n};\r\n\r\nlet counterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState: intialStateValues,\r\n  reducers: {\r\n    increment(state) {\r\n      state.counter++;\r\n    },\r\n\r\n    decrement(state) {\r\n      state.counter--;\r\n    },\r\n\r\n    increaseCounter(state, action) {\r\n      state.counter = state.counter + action.payload;\r\n    },\r\n    toggleCounter(state) {\r\n      state.showcounter = !state.showcounter;\r\n    },\r\n  },\r\n});\r\n\r\n// let reducerFunciton = (state = intialState, action) => {\r\n//   console.log(state);\r\n//   if (action.type === \"Increment\") {\r\n//     return {\r\n//       counter: state.counter + 1,\r\n//       showcounter: state.showcounter,\r\n//     };\r\n//   }\r\n//   if (action.type === \"IncrementByamount\") {\r\n//     return {\r\n//       counter: state.counter + action.amount,\r\n//       showcounter: state.showcounter,\r\n//     };\r\n//   }\r\n//   if (action.type === \"Decrement\") {\r\n//     return {\r\n//       counter: state.counter - 1,\r\n//       showcounter: state.showcounter,\r\n//     };\r\n//   }\r\n//   if (action.type === \"toggleCounter\") {\r\n//     return {\r\n//       counter: state.counter,\r\n//       showcounter: !state.showcounter,\r\n//     };\r\n//   }\r\n\r\n//   return state;\r\n// };\r\n\r\n// let reduxStore = createStore(reducerFunciton);\r\nlet reduxStore = configureStore({\r\n  reducer: { counter: counterSlice.reducer },\r\n});\r\n\r\nexport const counterAction = counterSlice.actions;\r\n\r\nexport default reduxStore;\r\n// let storeSubscription = () => {\r\n//   let storeObject = store.getState();\r\n//   console.log(storeObject);\r\n// };\r\n\r\n// store.subscribe(storeSubscription);\r\n\r\n// store.dispatch({ type: \"Increment\" });\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,IAAIC,iBAAiB,GAAG;EACtBC,OAAO,EAAE,CAAC;EACVC,WAAW,EAAE;AACf,CAAC;AAED,IAAIC,YAAY,GAAGL,WAAW,CAAC;EAC7BM,IAAI,EAAE,SAAS;EACfC,YAAY,EAAEL,iBAAiB;EAC/BM,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAE;MACfA,KAAK,CAACP,OAAO,EAAE;IACjB,CAAC;IAEDQ,SAASA,CAACD,KAAK,EAAE;MACfA,KAAK,CAACP,OAAO,EAAE;IACjB,CAAC;IAEDS,eAAeA,CAACF,KAAK,EAAEG,MAAM,EAAE;MAC7BH,KAAK,CAACP,OAAO,GAAGO,KAAK,CAACP,OAAO,GAAGU,MAAM,CAACC,OAAO;IAChD,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAE;MACnBA,KAAK,CAACN,WAAW,GAAG,CAACM,KAAK,CAACN,WAAW;IACxC;EACF;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAIY,UAAU,GAAGf,cAAc,CAAC;EAC9BgB,OAAO,EAAE;IAAEd,OAAO,EAAEE,YAAY,CAACY;EAAQ;AAC3C,CAAC,CAAC;AAEF,OAAO,MAAMC,aAAa,GAAGb,YAAY,CAACc,OAAO;AAEjD,eAAeH,UAAU;AACzB;AACA;AACA;AACA;;AAEA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}