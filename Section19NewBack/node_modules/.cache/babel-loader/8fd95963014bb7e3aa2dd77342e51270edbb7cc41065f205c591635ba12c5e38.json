{"ast":null,"code":"// const redux = require(\"redux\");\nimport { createStore } from \"redux\";\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\nimport counterStore from \"./counterStore\";\nimport authStore from \"./authStore\";\n\n// let reducerFunciton = (state = intialState, action) => {\n//   console.log(state);\n//   if (action.type === \"Increment\") {\n//     return {\n//       counter: state.counter + 1,\n//       showcounter: state.showcounter,\n//     };\n//   }\n//   if (action.type === \"IncrementByamount\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       showcounter: state.showcounter,\n//     };\n//   }\n//   if (action.type === \"Decrement\") {\n//     return {\n//       counter: state.counter - 1,\n//       showcounter: state.showcounter,\n//     };\n//   }\n//   if (action.type === \"toggleCounter\") {\n//     return {\n//       counter: state.counter,\n//       showcounter: !state.showcounter,\n//     };\n//   }\n\n//   return state;\n// };\n\n// let reduxStore = createStore(reducerFunciton);\nlet reduxStore = configureStore({\n  reducer: {\n    counter: counterStore,\n    authicate: authSlice.reducer\n  }\n});\nexport default reduxStore;\n// let storeSubscription = () => {\n//   let storeObject = store.getState();\n//   console.log(storeObject);\n// };\n\n// store.subscribe(storeSubscription);\n\n// store.dispatch({ type: \"Increment\" });","map":{"version":3,"names":["createStore","createSlice","configureStore","counterStore","authStore","reduxStore","reducer","counter","authicate","authSlice"],"sources":["C:/Users/Ravi_Teja_Muppala/Documents/GitUdemyReactJs/reactlearning/Section19NewBack/src/store/redux-store.js"],"sourcesContent":["// const redux = require(\"redux\");\r\nimport { createStore } from \"redux\";\r\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\nimport counterStore from \"./counterStore\";\r\nimport authStore from \"./authStore\";\r\n\r\n// let reducerFunciton = (state = intialState, action) => {\r\n//   console.log(state);\r\n//   if (action.type === \"Increment\") {\r\n//     return {\r\n//       counter: state.counter + 1,\r\n//       showcounter: state.showcounter,\r\n//     };\r\n//   }\r\n//   if (action.type === \"IncrementByamount\") {\r\n//     return {\r\n//       counter: state.counter + action.amount,\r\n//       showcounter: state.showcounter,\r\n//     };\r\n//   }\r\n//   if (action.type === \"Decrement\") {\r\n//     return {\r\n//       counter: state.counter - 1,\r\n//       showcounter: state.showcounter,\r\n//     };\r\n//   }\r\n//   if (action.type === \"toggleCounter\") {\r\n//     return {\r\n//       counter: state.counter,\r\n//       showcounter: !state.showcounter,\r\n//     };\r\n//   }\r\n\r\n//   return state;\r\n// };\r\n\r\n// let reduxStore = createStore(reducerFunciton);\r\nlet reduxStore = configureStore({\r\n  reducer: { counter: counterStore, authicate: authSlice.reducer },\r\n});\r\n\r\nexport default reduxStore;\r\n// let storeSubscription = () => {\r\n//   let storeObject = store.getState();\r\n//   console.log(storeObject);\r\n// };\r\n\r\n// store.subscribe(storeSubscription);\r\n\r\n// store.dispatch({ type: \"Increment\" });\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAC9D,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,SAAS,MAAM,aAAa;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAIC,UAAU,GAAGH,cAAc,CAAC;EAC9BI,OAAO,EAAE;IAAEC,OAAO,EAAEJ,YAAY;IAAEK,SAAS,EAAEC,SAAS,CAACH;EAAQ;AACjE,CAAC,CAAC;AAEF,eAAeD,UAAU;AACzB;AACA;AACA;AACA;;AAEA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}