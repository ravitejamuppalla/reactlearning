{"ast":null,"code":"// const redux = require(\"redux\");\nimport { createStore } from \"redux\";\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\nimport counterStore from \"./counterStore\";\nlet intialStateValues = {\n  counter: 0,\n  showcounter: true\n};\nlet AuthIntialState = {\n  isAuth: false\n};\nlet authSlice = createSlice({\n  name: \"Auth\",\n  initialState: AuthIntialState,\n  reducers: {\n    login(state) {\n      state.isAuth = true;\n    },\n    logout(state) {\n      state.isAuth = false;\n    }\n  }\n});\n\n// let reducerFunciton = (state = intialState, action) => {\n//   console.log(state);\n//   if (action.type === \"Increment\") {\n//     return {\n//       counter: state.counter + 1,\n//       showcounter: state.showcounter,\n//     };\n//   }\n//   if (action.type === \"IncrementByamount\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       showcounter: state.showcounter,\n//     };\n//   }\n//   if (action.type === \"Decrement\") {\n//     return {\n//       counter: state.counter - 1,\n//       showcounter: state.showcounter,\n//     };\n//   }\n//   if (action.type === \"toggleCounter\") {\n//     return {\n//       counter: state.counter,\n//       showcounter: !state.showcounter,\n//     };\n//   }\n\n//   return state;\n// };\n\n// let reduxStore = createStore(reducerFunciton);\nlet reduxStore = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    authicate: authSlice.reducer\n  }\n});\nexport const authAction = authSlice.actions;\nexport default reduxStore;\n// let storeSubscription = () => {\n//   let storeObject = store.getState();\n//   console.log(storeObject);\n// };\n\n// store.subscribe(storeSubscription);\n\n// store.dispatch({ type: \"Increment\" });","map":{"version":3,"names":["createStore","createSlice","configureStore","counterStore","intialStateValues","counter","showcounter","AuthIntialState","isAuth","authSlice","name","initialState","reducers","login","state","logout","reduxStore","reducer","counterSlice","authicate","authAction","actions"],"sources":["C:/Users/Ravi_Teja_Muppala/Documents/GitUdemyReactJs/reactlearning/Section19NewBack/src/store/redux-store.js"],"sourcesContent":["// const redux = require(\"redux\");\r\nimport { createStore } from \"redux\";\r\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\nimport counterStore from \"./counterStore\";\r\nlet intialStateValues = {\r\n  counter: 0,\r\n  showcounter: true,\r\n};\r\n\r\nlet AuthIntialState = {\r\n  isAuth: false,\r\n};\r\n\r\nlet authSlice = createSlice({\r\n  name: \"Auth\",\r\n  initialState: AuthIntialState,\r\n  reducers: {\r\n    login(state) {\r\n      state.isAuth = true;\r\n    },\r\n    logout(state) {\r\n      state.isAuth = false;\r\n    },\r\n  },\r\n});\r\n\r\n// let reducerFunciton = (state = intialState, action) => {\r\n//   console.log(state);\r\n//   if (action.type === \"Increment\") {\r\n//     return {\r\n//       counter: state.counter + 1,\r\n//       showcounter: state.showcounter,\r\n//     };\r\n//   }\r\n//   if (action.type === \"IncrementByamount\") {\r\n//     return {\r\n//       counter: state.counter + action.amount,\r\n//       showcounter: state.showcounter,\r\n//     };\r\n//   }\r\n//   if (action.type === \"Decrement\") {\r\n//     return {\r\n//       counter: state.counter - 1,\r\n//       showcounter: state.showcounter,\r\n//     };\r\n//   }\r\n//   if (action.type === \"toggleCounter\") {\r\n//     return {\r\n//       counter: state.counter,\r\n//       showcounter: !state.showcounter,\r\n//     };\r\n//   }\r\n\r\n//   return state;\r\n// };\r\n\r\n// let reduxStore = createStore(reducerFunciton);\r\nlet reduxStore = configureStore({\r\n  reducer: { counter: counterSlice.reducer, authicate: authSlice.reducer },\r\n});\r\n\r\nexport const authAction = authSlice.actions;\r\n\r\nexport default reduxStore;\r\n// let storeSubscription = () => {\r\n//   let storeObject = store.getState();\r\n//   console.log(storeObject);\r\n// };\r\n\r\n// store.subscribe(storeSubscription);\r\n\r\n// store.dispatch({ type: \"Increment\" });\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAC9D,OAAOC,YAAY,MAAM,gBAAgB;AACzC,IAAIC,iBAAiB,GAAG;EACtBC,OAAO,EAAE,CAAC;EACVC,WAAW,EAAE;AACf,CAAC;AAED,IAAIC,eAAe,GAAG;EACpBC,MAAM,EAAE;AACV,CAAC;AAED,IAAIC,SAAS,GAAGR,WAAW,CAAC;EAC1BS,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEJ,eAAe;EAC7BK,QAAQ,EAAE;IACRC,KAAKA,CAACC,KAAK,EAAE;MACXA,KAAK,CAACN,MAAM,GAAG,IAAI;IACrB,CAAC;IACDO,MAAMA,CAACD,KAAK,EAAE;MACZA,KAAK,CAACN,MAAM,GAAG,KAAK;IACtB;EACF;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAIQ,UAAU,GAAGd,cAAc,CAAC;EAC9Be,OAAO,EAAE;IAAEZ,OAAO,EAAEa,YAAY,CAACD,OAAO;IAAEE,SAAS,EAAEV,SAAS,CAACQ;EAAQ;AACzE,CAAC,CAAC;AAEF,OAAO,MAAMG,UAAU,GAAGX,SAAS,CAACY,OAAO;AAE3C,eAAeL,UAAU;AACzB;AACA;AACA;AACA;;AAEA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}