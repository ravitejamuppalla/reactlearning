{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ravi_Teja_Muppala\\\\Documents\\\\GitUdemyReactJs\\\\reactlearning\\\\Section20FullProject\\\\src\\\\pages\\\\QuotesDetails.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect } from \"react\";\nimport { Fragment } from \"react\";\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport Comments from \"../components/comments/Comments\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction QuotesDeatils() {\n  _s();\n\n  let params = useParams();\n  let match = useRouteMatch();\n  const {\n    quotesID\n  } = params;\n  let {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error\n  } = useHttp(getSingleQuote, true);\n  console.log(useHttp(getSingleQuote, true));\n  useEffect(() => {\n    sendRequest(quotesID);\n  }, [sendRequest, quotesID]);\n\n  if (status === \"pending\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (!loadedQuotes.text) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No quote found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: loadedQuotes.text,\n      author: loadedQuotes.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: match.path,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `${match.url}/comments`,\n          className: \"btn--flat\",\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuotesDeatils, \"ARhD5OaPTTEbj9LJ5xR8muGy9p4=\", false, function () {\n  return [useParams, useRouteMatch, useHttp, useHttp];\n});\n\n_c = QuotesDeatils;\nexport default QuotesDeatils;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuotesDeatils\");","map":{"version":3,"names":["React","useEffect","Fragment","useParams","Route","Link","useRouteMatch","HighlightedQuote","Comments","useHttp","getSingleQuote","LoadingSpinner","QuotesDeatils","params","match","quotesID","sendRequest","status","data","loadedQuotes","error","console","log","text","author","path","url"],"sources":["C:/Users/Ravi_Teja_Muppala/Documents/GitUdemyReactJs/reactlearning/Section20FullProject/src/pages/QuotesDetails.js"],"sourcesContent":["import { React, useEffect } from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\n\r\nfunction QuotesDeatils() {\r\n  let params = useParams();\r\n  let match = useRouteMatch();\r\n  const { quotesID } = params;\r\n\r\n  let {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuotes,\r\n    error,\r\n  } = useHttp(getSingleQuote, true);\r\n  console.log(useHttp(getSingleQuote, true));\r\n\r\n  useEffect(() => {\r\n    sendRequest(quotesID);\r\n  }, [sendRequest, quotesID]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner></LoadingSpinner>\r\n      </div>\r\n    );\r\n  }\r\n  if (error) {\r\n    return (\r\n      <div className=\"centered\">\r\n        <p> {error}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!loadedQuotes.text) {\r\n    return <p>No quote found!</p>;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <HighlightedQuote\r\n        text={loadedQuotes.text}\r\n        author={loadedQuotes.author}\r\n      ></HighlightedQuote>\r\n      <Route path={match.path} exact>\r\n        <div className=\"centered\">\r\n          <Link to={`${match.url}/comments`} className=\"btn--flat\">\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n      <Route path={`${match.path}/comments`}>\r\n        <Comments></Comments>\r\n      </Route>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default QuotesDeatils;\r\n"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,IAA3B,EAAiCC,aAAjC,QAAsD,kBAAtD;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;;AAEA,SAASC,aAAT,GAAyB;EAAA;;EACvB,IAAIC,MAAM,GAAGV,SAAS,EAAtB;EACA,IAAIW,KAAK,GAAGR,aAAa,EAAzB;EACA,MAAM;IAAES;EAAF,IAAeF,MAArB;EAEA,IAAI;IACFG,WADE;IAEFC,MAFE;IAGFC,IAAI,EAAEC,YAHJ;IAIFC;EAJE,IAKAX,OAAO,CAACC,cAAD,EAAiB,IAAjB,CALX;EAMAW,OAAO,CAACC,GAAR,CAAYb,OAAO,CAACC,cAAD,EAAiB,IAAjB,CAAnB;EAEAT,SAAS,CAAC,MAAM;IACde,WAAW,CAACD,QAAD,CAAX;EACD,CAFQ,EAEN,CAACC,WAAD,EAAcD,QAAd,CAFM,CAAT;;EAIA,IAAIE,MAAM,KAAK,SAAf,EAA0B;IACxB,oBACE;MAAK,SAAS,EAAC,UAAf;MAAA,uBACE,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAKD;;EACD,IAAIG,KAAJ,EAAW;IACT,oBACE;MAAK,SAAS,EAAC,UAAf;MAAA,uBACE;QAAA,gBAAKA,KAAL;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAKD;;EAED,IAAI,CAACD,YAAY,CAACI,IAAlB,EAAwB;IACtB,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EACD,oBACE,QAAC,QAAD;IAAA,wBACE,QAAC,gBAAD;MACE,IAAI,EAAEJ,YAAY,CAACI,IADrB;MAEE,MAAM,EAAEJ,YAAY,CAACK;IAFvB;MAAA;MAAA;MAAA;IAAA,QADF,eAKE,QAAC,KAAD;MAAO,IAAI,EAAEV,KAAK,CAACW,IAAnB;MAAyB,KAAK,MAA9B;MAAA,uBACE;QAAK,SAAS,EAAC,UAAf;QAAA,uBACE,QAAC,IAAD;UAAM,EAAE,EAAG,GAAEX,KAAK,CAACY,GAAI,WAAvB;UAAmC,SAAS,EAAC,WAA7C;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QALF,eAYE,QAAC,KAAD;MAAO,IAAI,EAAG,GAAEZ,KAAK,CAACW,IAAK,WAA3B;MAAA,uBACE,QAAC,QAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAZF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD;;GArDQb,a;UACMT,S,EACDG,a,EAQRG,O,EACQA,O;;;KAXLG,a;AAuDT,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}